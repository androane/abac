# -*- coding: utf-8 -*-
# Generated by Django 5.0.1 on 2024-03-14 09:10

import dirtyfields.dirtyfields
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import core.models


class Migration(migrations.Migration):
    dependencies = [
        ("organization", "0013_remove_historicalinvoiceitem_organization_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "unit_cost",
                    models.IntegerField(
                        blank=True,
                        help_text="Cost of the Activity per unit type",
                        null=True,
                    ),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_cost_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The cost type of the activity can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Activities",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ActivityCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientActivity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the Activity")),
                ("year", models.SmallIntegerField(help_text="Year of the Activity")),
                (
                    "is_executed",
                    models.BooleanField(
                        default=True, help_text="Is the activity executed?"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Client Activities",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientActivityLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientSolution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "month",
                    models.SmallIntegerField(
                        blank=True, help_text="Month of the Solution", null=True
                    ),
                ),
                (
                    "year",
                    models.SmallIntegerField(
                        blank=True, help_text="Year of the Solution", null=True
                    ),
                ),
                (
                    "unit_cost",
                    models.IntegerField(help_text="Cost/Price of the Solution"),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientSolutionLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalActivity",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "unit_cost",
                    models.IntegerField(
                        blank=True,
                        help_text="Cost of the Activity per unit type",
                        null=True,
                    ),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_cost_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The cost type of the activity can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical activity",
                "verbose_name_plural": "historical Activities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalActivityCategory",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical activity category",
                "verbose_name_plural": "historical Categories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientActivity",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the Activity")),
                ("year", models.SmallIntegerField(help_text="Year of the Activity")),
                (
                    "is_executed",
                    models.BooleanField(
                        default=True, help_text="Is the activity executed?"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client activity",
                "verbose_name_plural": "historical Client Activities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientActivityLog",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client activity log",
                "verbose_name_plural": "historical client activity logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientSolution",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "month",
                    models.SmallIntegerField(
                        blank=True, help_text="Month of the Solution", null=True
                    ),
                ),
                (
                    "year",
                    models.SmallIntegerField(
                        blank=True, help_text="Year of the Solution", null=True
                    ),
                ),
                (
                    "unit_cost",
                    models.IntegerField(help_text="Cost/Price of the Solution"),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client solution",
                "verbose_name_plural": "historical client solutions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientSolutionLog",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client solution log",
                "verbose_name_plural": "historical client solution logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSolution",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical solution",
                "verbose_name_plural": "historical solutions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.RemoveField(
            model_name="historicalinvoiceitem",
            name="category",
        ),
        migrations.RemoveField(
            model_name="historicalinvoiceitem",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalinvoiceitem",
            name="invoice",
        ),
        migrations.RemoveField(
            model_name="historicalinvoiceitem",
            name="standard_invoice_item",
        ),
        migrations.RemoveField(
            model_name="historicalstandardinvoiceitem",
            name="category",
        ),
        migrations.RemoveField(
            model_name="historicalstandardinvoiceitem",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicalstandardinvoiceitem",
            name="organization",
        ),
        migrations.RemoveField(
            model_name="historicalstandardinvoiceitemcategory",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="invoiceitem",
            name="category",
        ),
        migrations.RemoveField(
            model_name="invoiceitem",
            name="invoice",
        ),
        migrations.RemoveField(
            model_name="invoiceitem",
            name="standard_invoice_item",
        ),
        migrations.RemoveField(
            model_name="standardinvoiceitem",
            name="category",
        ),
        migrations.RemoveField(
            model_name="standardinvoiceitem",
            name="organization",
        ),
        migrations.RemoveField(
            model_name="client",
            name="phone_number_1",
        ),
        migrations.RemoveField(
            model_name="client",
            name="phone_number_2",
        ),
        migrations.RemoveField(
            model_name="historicalclient",
            name="phone_number_1",
        ),
        migrations.RemoveField(
            model_name="historicalclient",
            name="phone_number_2",
        ),
        migrations.AlterField(
            model_name="historicalorganization",
            name="name",
            field=models.CharField(max_length=128),
        ),
        migrations.AlterField(
            model_name="organization",
            name="name",
            field=models.CharField(max_length=128),
        ),
        migrations.AddConstraint(
            model_name="client",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("organization", "name"),
                name="organization_client_organization_name_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="organization",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("name",),
                name="organization_organization_name_unique",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="client",
            field=models.ForeignKey(
                help_text="The client for which the activity is created. If null, the activity is for the organization.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="organization.organization",
            ),
        ),
        migrations.AddConstraint(
            model_name="activitycategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("name",),
                name="organization_activity_category_name_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="activitycategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("code",),
                name="organization_activity_category_code_unique",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="clientactivity",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_activities",
                to="organization.activity",
            ),
        ),
        migrations.AddField(
            model_name="clientactivity",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_activities",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="clientactivitylog",
            name="client_activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="organization.clientactivity",
            ),
        ),
        migrations.AddField(
            model_name="clientsolution",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_solutions",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="clientsolutionlog",
            name="client_solution",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="organization.clientsolution",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="category",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="The client for which the activity is created. If null, the activity is for the organization.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivitycategory",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="activity",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activity",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivitylog",
            name="client_activity",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.clientactivity",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivitylog",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolutionlog",
            name="client_solution",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.clientsolution",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolutionlog",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="category",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="activities",
            field=models.ManyToManyField(
                related_name="solutions", to="organization.activity"
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="solutions",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="solution",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.solution",
            ),
        ),
        migrations.AddField(
            model_name="clientsolution",
            name="solution",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="organization.solution"
            ),
        ),
        migrations.DeleteModel(
            name="HistoricalInvoiceItem",
        ),
        migrations.DeleteModel(
            name="HistoricalStandardInvoiceItem",
        ),
        migrations.DeleteModel(
            name="HistoricalStandardInvoiceItemCategory",
        ),
        migrations.DeleteModel(
            name="InvoiceItem",
        ),
        migrations.DeleteModel(
            name="StandardInvoiceItemCategory",
        ),
        migrations.DeleteModel(
            name="StandardInvoiceItem",
        ),
        migrations.AddConstraint(
            model_name="activity",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True), ("client__isnull", True)),
                fields=("name", "organization", "category"),
                name="organization_activity_name_organization_category_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="clientactivity",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("month", "year", "client", "activity"),
                name="organization_client_activity_month_year_client_activity_unique",
            ),
        ),
    ]

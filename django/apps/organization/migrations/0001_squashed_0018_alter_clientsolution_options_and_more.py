# -*- coding: utf-8 -*-
# Generated by Django 5.0.1 on 2024-03-25 08:43

import dirtyfields.dirtyfields
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import core.models
import organization.models.client
import organization.models.organization


class Migration(migrations.Migration):
    replaces = [
        ("organization", "0001_initial"),
        ("organization", "0002_initial"),
        ("organization", "0003_client_accounting_app_client_inventory_app_and_more"),
        ("organization", "0004_clientuserprofile_user_and_more"),
        ("organization", "0005_historicalorganization_logo_organization_logo"),
        ("organization", "0006_client_spv_password_client_spv_username_and_more"),
        ("organization", "0007_clientuserprofile_phone_number_and_more"),
        ("organization", "0008_historicalinvoiceitem_name_and_more"),
        ("organization", "0009_historicalinvoiceitem_quantity_invoiceitem_quantity"),
        ("organization", "0010_alter_historicalinvoiceitem_unit_price_type_and_more"),
        ("organization", "0011_standardinvoiceitemcategory_and_more"),
        (
            "organization",
            "0012_alter_historicalstandardinvoiceitemcategory_code_and_more",
        ),
        ("organization", "0013_remove_historicalinvoiceitem_organization_and_more"),
        ("organization", "0014_activity_activitycategory_clientactivity_and_more"),
        ("organization", "0015_alter_clientsolution_options_and_more"),
        ("organization", "0016_clientuserobjectpermission"),
        (
            "organization",
            "0017_clientactivity_quantity_clientsolution_quantity_and_more",
        ),
        ("organization", "0018_alter_clientsolution_options_and_more"),
    ]

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "logo",
                    models.FileField(
                        blank=True,
                        help_text="Organization logo",
                        null=True,
                        upload_to=organization.models.organization.organization_logo_path,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "cui",
                    models.CharField(
                        blank=True,
                        help_text="CUI - Cod Unic de Identificare",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "program_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="clients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clients",
                        to="organization.organization",
                    ),
                ),
                (
                    "accounting_app",
                    models.CharField(
                        blank=True,
                        help_text="Application they use for accounting",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "inventory_app",
                    models.CharField(
                        blank=True,
                        help_text="Application they use to manage inventory",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "spv_password",
                    models.CharField(
                        blank=True, help_text="SPV Password", max_length=64, null=True
                    ),
                ),
                (
                    "spv_username",
                    models.CharField(
                        blank=True, help_text="SPV Username", max_length=64, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(blank=True, max_length=128, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        help_text="File resource",
                        null=True,
                        upload_to=organization.models.client.client_file_path,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="organization.client",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientFile",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(blank=True, max_length=128, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "file",
                    models.TextField(
                        blank=True, help_text="File resource", max_length=100, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organization.client",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client file",
                "verbose_name_plural": "historical client files",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoice",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the invoice")),
                ("year", models.SmallIntegerField(help_text="Year of the invoice")),
                (
                    "date_sent",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice was sent to the customer",
                        null=True,
                    ),
                ),
                (
                    "date_paid",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice was paid by the customer",
                        null=True,
                    ),
                ),
                (
                    "date_due",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice is due to be paid by the customer",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organization.client",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice",
                "verbose_name_plural": "historical invoices",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the invoice")),
                ("year", models.SmallIntegerField(help_text="Year of the invoice")),
                (
                    "date_sent",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice was sent to the customer",
                        null=True,
                    ),
                ),
                (
                    "date_paid",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice was paid by the customer",
                        null=True,
                    ),
                ),
                (
                    "date_due",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice is due to be paid by the customer",
                        null=True,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="organization.client",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientUserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "ownership_percentage",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="What percentage of the organization does this user own?",
                        null=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADMINSTRATOR", "Adminstrator"),
                            ("ASSOCIATE", "Associate"),
                            ("EMPLOYEE", "Employee"),
                            ("MANAGER", "Manager"),
                        ],
                        help_text="Role in the organization",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "spv_username",
                    models.CharField(
                        blank=True, help_text="SPV Username", max_length=64, null=True
                    ),
                ),
                (
                    "spv_password",
                    models.CharField(
                        blank=True, help_text="SPV Password", max_length=64, null=True
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_profiles",
                        to="organization.client",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("phone_number", models.CharField(blank=True, max_length=12)),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientUserProfile",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "ownership_percentage",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="What percentage of the organization does this user own?",
                        null=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADMINSTRATOR", "Adminstrator"),
                            ("ASSOCIATE", "Associate"),
                            ("EMPLOYEE", "Employee"),
                            ("MANAGER", "Manager"),
                        ],
                        help_text="Role in the organization",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "spv_username",
                    models.CharField(
                        blank=True, help_text="SPV Username", max_length=64, null=True
                    ),
                ),
                (
                    "spv_password",
                    models.CharField(
                        blank=True, help_text="SPV Password", max_length=64, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organization.client",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("phone_number", models.CharField(blank=True, max_length=12)),
            ],
            options={
                "verbose_name": "historical client user profile",
                "verbose_name_plural": "historical client user profiles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="StandardInvoiceItemCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
            ],
            options={
                "verbose_name_plural": "Standard Invoice Item Categories",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="StandardInvoiceItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Name of the invoice item", max_length=256
                    ),
                ),
                (
                    "unit_price",
                    models.IntegerField(
                        help_text="Price of the invoice item per unit type"
                    ),
                ),
                (
                    "unit_price_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_price_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The type of the invoice item can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "unit_cost",
                    models.IntegerField(
                        blank=True,
                        help_text="Cost of the Activity per unit type",
                        null=True,
                    ),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_cost_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The cost type of the activity can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Activities",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ActivityCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientActivity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the Activity")),
                ("year", models.SmallIntegerField(help_text="Year of the Activity")),
                (
                    "is_executed",
                    models.BooleanField(
                        default=True, help_text="Is the activity executed?"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Client Activities",
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientActivityLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientSolution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "month",
                    models.SmallIntegerField(
                        blank=True, help_text="Month of the Solution", null=True
                    ),
                ),
                (
                    "year",
                    models.SmallIntegerField(
                        blank=True, help_text="Year of the Solution", null=True
                    ),
                ),
                (
                    "unit_cost",
                    models.IntegerField(help_text="Cost/Price of the Solution"),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ClientSolutionLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalActivity",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "unit_cost",
                    models.IntegerField(
                        blank=True,
                        help_text="Cost of the Activity per unit type",
                        null=True,
                    ),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_cost_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The cost type of the activity can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical activity",
                "verbose_name_plural": "historical Activities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalActivityCategory",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical activity category",
                "verbose_name_plural": "historical Categories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientActivity",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("month", models.SmallIntegerField(help_text="Month of the Activity")),
                ("year", models.SmallIntegerField(help_text="Year of the Activity")),
                (
                    "is_executed",
                    models.BooleanField(
                        default=True, help_text="Is the activity executed?"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client activity",
                "verbose_name_plural": "historical Client Activities",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientActivityLog",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client activity log",
                "verbose_name_plural": "historical client activity logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientSolution",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "month",
                    models.SmallIntegerField(
                        blank=True, help_text="Month of the Solution", null=True
                    ),
                ),
                (
                    "year",
                    models.SmallIntegerField(
                        blank=True, help_text="Year of the Solution", null=True
                    ),
                ),
                (
                    "unit_cost",
                    models.IntegerField(help_text="Cost/Price of the Solution"),
                ),
                (
                    "unit_cost_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client solution",
                "verbose_name_plural": "historical client solutions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientSolutionLog",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        help_text="Number of minutes allocated for this activity"
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date when the activity was executed"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the log",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client solution log",
                "verbose_name_plural": "historical client solution logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSolution",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical solution",
                "verbose_name_plural": "historical solutions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Solution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoiceItem",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the invoice item",
                        null=True,
                    ),
                ),
                (
                    "unit_price",
                    models.IntegerField(
                        help_text="Price of the invoice item per unit type"
                    ),
                ),
                (
                    "unit_price_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "item_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice item was executed",
                        null=True,
                    ),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="Number of minutes allocated to the customer for this invoice item",
                        null=True,
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(
                        default=False,
                        help_text="Boolean indicating if this invoice item is a recurring item every month",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Name of the invoice item", max_length=256
                    ),
                ),
                (
                    "unit_price_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The type of the invoice item can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
                (
                    "quantity",
                    models.SmallIntegerField(
                        default=1,
                        help_text="How many of these items are on the invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice item",
                "verbose_name_plural": "historical invoice items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStandardInvoiceItem",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Name of the invoice item", max_length=256
                    ),
                ),
                (
                    "unit_price",
                    models.IntegerField(
                        help_text="Price of the invoice item per unit type"
                    ),
                ),
                (
                    "unit_price_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "unit_price_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The type of the invoice item can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical standard invoice item",
                "verbose_name_plural": "historical standard invoice items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStandardInvoiceItemCategory",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("code", models.CharField(max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical standard invoice item category",
                "verbose_name_plural": "historical Standard Invoice Item Categories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional explanation for the invoice item",
                        null=True,
                    ),
                ),
                (
                    "unit_price",
                    models.IntegerField(
                        help_text="Price of the invoice item per unit type"
                    ),
                ),
                (
                    "unit_price_currency",
                    models.CharField(
                        choices=[("RON", "Ron"), ("EUR", "Eur"), ("USD", "Usd")],
                        max_length=3,
                    ),
                ),
                (
                    "item_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when the invoice item was executed",
                        null=True,
                    ),
                ),
                (
                    "minutes_allocated",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="Number of minutes allocated to the customer for this invoice item",
                        null=True,
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(
                        default=False,
                        help_text="Boolean indicating if this invoice item is a recurring item every month",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="Name of the invoice item", max_length=256
                    ),
                ),
                (
                    "unit_price_type",
                    models.CharField(
                        choices=[("FIXED", "Fixed"), ("HOURLY", "Hourly")],
                        help_text="The type of the invoice item can be fixed, per hour etc",
                        max_length=8,
                    ),
                ),
                (
                    "quantity",
                    models.SmallIntegerField(
                        default=1,
                        help_text="How many of these items are on the invoice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClient",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "cui",
                    models.CharField(
                        blank=True,
                        help_text="CUI - Cod Unic de Identificare",
                        max_length=32,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "program_manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organization.organization",
                    ),
                ),
                (
                    "accounting_app",
                    models.CharField(
                        blank=True,
                        help_text="Application they use for accounting",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "inventory_app",
                    models.CharField(
                        blank=True,
                        help_text="Application they use to manage inventory",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "spv_password",
                    models.CharField(
                        blank=True, help_text="SPV Password", max_length=64, null=True
                    ),
                ),
                (
                    "spv_username",
                    models.CharField(
                        blank=True, help_text="SPV Username", max_length=64, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client",
                "verbose_name_plural": "historical clients",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalOrganization",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("name", models.CharField(max_length=128)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "logo",
                    models.TextField(
                        blank=True,
                        help_text="Organization logo",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical organization",
                "verbose_name_plural": "historical organizations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name="client",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("organization", "name"),
                name="organization_client_organization_name_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="organization",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("name",),
                name="organization_organization_name_unique",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="client",
            field=models.ForeignKey(
                help_text="The client for which the activity is created. If null, the activity is for the organization.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activities",
                to="organization.organization",
            ),
        ),
        migrations.AddConstraint(
            model_name="activitycategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("name",),
                name="organization_activity_category_name_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="activitycategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("code",),
                name="organization_activity_category_code_unique",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="clientactivity",
            name="activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_activities",
                to="organization.activity",
            ),
        ),
        migrations.AddField(
            model_name="clientactivity",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_activities",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="clientactivitylog",
            name="client_activity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="organization.clientactivity",
            ),
        ),
        migrations.AddField(
            model_name="clientsolution",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_solutions",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="clientsolutionlog",
            name="client_solution",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="organization.clientsolution",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="category",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="The client for which the activity is created. If null, the activity is for the organization.",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalactivity",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="historicalactivitycategory",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="activity",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activity",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivitylog",
            name="client_activity",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.clientactivity",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivitylog",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="client",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.client",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolutionlog",
            name="client_solution",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.clientsolution",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolutionlog",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="category",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsolution",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="activities",
            field=models.ManyToManyField(
                related_name="solutions", to="organization.activity"
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="organization.activitycategory",
            ),
        ),
        migrations.AddField(
            model_name="solution",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="solutions",
                to="organization.organization",
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="solution",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="organization.solution",
            ),
        ),
        migrations.AddField(
            model_name="clientsolution",
            name="solution",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="organization.solution"
            ),
        ),
        migrations.DeleteModel(
            name="HistoricalInvoiceItem",
        ),
        migrations.DeleteModel(
            name="HistoricalStandardInvoiceItem",
        ),
        migrations.DeleteModel(
            name="HistoricalStandardInvoiceItemCategory",
        ),
        migrations.DeleteModel(
            name="InvoiceItem",
        ),
        migrations.DeleteModel(
            name="StandardInvoiceItemCategory",
        ),
        migrations.DeleteModel(
            name="StandardInvoiceItem",
        ),
        migrations.AddConstraint(
            model_name="activity",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True), ("client__isnull", True)),
                fields=("name", "organization", "category"),
                name="organization_activity_name_organization_category_unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="clientactivity",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("month", "year", "client", "activity"),
                name="organization_client_activity_month_year_client_activity_unique",
            ),
        ),
        migrations.AlterModelOptions(
            name="clientsolution",
            options={"verbose_name_plural": "Client Activities"},
        ),
        migrations.AlterModelOptions(
            name="historicalclientsolution",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical client solution",
                "verbose_name_plural": "historical Client Activities",
            },
        ),
        migrations.AddConstraint(
            model_name="clientsolution",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted__isnull", True)),
                fields=("month", "year", "client", "solution"),
                name="organization_client_activity_month_year_client_solution_unique",
            ),
        ),
        migrations.CreateModel(
            name="ClientUserObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organization.client",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "permission", "content_object")},
            },
        ),
        migrations.AddField(
            model_name="clientactivity",
            name="quantity",
            field=models.SmallIntegerField(
                default=1, help_text="Quantity of the Activity"
            ),
        ),
        migrations.AddField(
            model_name="clientsolution",
            name="quantity",
            field=models.SmallIntegerField(
                default=1, help_text="Quantity of the Activity"
            ),
        ),
        migrations.AddField(
            model_name="historicalclientactivity",
            name="quantity",
            field=models.SmallIntegerField(
                default=1, help_text="Quantity of the Activity"
            ),
        ),
        migrations.AddField(
            model_name="historicalclientsolution",
            name="quantity",
            field=models.SmallIntegerField(
                default=1, help_text="Quantity of the Activity"
            ),
        ),
        migrations.AlterModelOptions(
            name="clientsolution",
            options={},
        ),
        migrations.AlterModelOptions(
            name="historicalclientsolution",
            options={
                "get_latest_by": ("history_date", "history_id"),
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical client solution",
                "verbose_name_plural": "historical client solutions",
            },
        ),
        migrations.CreateModel(
            name="ClientSoftware",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "software",
                    models.CharField(
                        choices=[("ONE_C", "One C"), ("SAGA", "Saga")], max_length=32
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=64, null=True)),
                ("password", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="softwares",
                        to="organization.client",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClientSoftware",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "uuid",
                    models.CharField(
                        default=core.models.generate_uuid, editable=False, max_length=32
                    ),
                ),
                ("created", models.DateTimeField(blank=True, editable=False)),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "deleted",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "software",
                    models.CharField(
                        choices=[("ONE_C", "One C"), ("SAGA", "Saga")], max_length=32
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=64, null=True)),
                ("password", models.CharField(blank=True, max_length=64, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organization.client",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical client software",
                "verbose_name_plural": "historical client softwares",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
